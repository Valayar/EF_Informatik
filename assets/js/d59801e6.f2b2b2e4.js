"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[858],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),f=d(t),m=l,c=f["".concat(s,".").concat(m)]||f[m]||u[m]||i;return t?r.createElement(c,a(a({ref:n},p),{},{components:t})):r.createElement(c,a({ref:n},p))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,a=new Array(i);a[0]=f;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,a[1]=o;for(var d=2;d<i;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7457:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=t(7462),l=(t(7294),t(3905));const i={},a="Arbeit an NumTrip",o={permalink:"/EF_Informatik/Arbeit an NumTrip",editUrl:"https://github.com/Valayar/EF_Informatik/tree/main/blog/Arbeit an NumTrip.md",source:"@site/blog/Arbeit an NumTrip.md",title:"Arbeit an NumTrip",description:"Floodfill",date:"2023-01-09T18:29:09.000Z",formattedDate:"9. Januar 2023",tags:[],readingTime:2.83,hasTruncateMarker:!1,authors:[],frontMatter:{},nextItem:{title:"Datenstruktur NumTrip",permalink:"/EF_Informatik/Datenstruktur Numtrip"}},s={authorsImageUrls:[]},d=[],p={toc:d};function u(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"nachbarzellen-kombinieren"},"Nachbarzellen Kombinieren"),(0,l.kt)("p",null," ",(0,l.kt)("strong",{parentName:"p"},"Floodfill")),(0,l.kt)("p",null,"Das Prinzip einer Floodfill funktion ist ja noch relativ einfach zu verstehen. Wie diese in der Programmierspache implementiert wird, ist eine andere Sache. zun\xe4chst hatte ich mir den zugeh\xf6renden Wikipediaeintrag dazu angeschaut. "),(0,l.kt)("p",null,"jedoch konnte ich mir den unterschied von diesen zwei Codebl\xf6cken nicht erkl\xe4ren."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def fill4(x, y, alteFarbe, neueFarbe):\n    if getPixel(x, y) == alteFarbe:\n        setPixel(x, y, neueFarbe)\n        fill4(x, y + 1, alteFarbe, neueFarbe)  # unten\n        fill4(x, y - 1, alteFarbe, neueFarbe)  # oben\n        fill4(x + 1, y, alteFarbe, neueFarbe)  # rechts\n        fill4(x - 1, y, alteFarbe, neueFarbe)  # links\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def fill4(x, y, alteFarbe, neueFarbe):\n    stack.push(x, y)\n    while stack.isNotEmpty():\n        (x, y) = stack.pop()\n        if getPixel(x, y) == alteFarbe:\n            setPixel(x, y, neueFarbe)\n            stack.push(x, y + 1)\n            stack.push(x, y - 1)\n            stack.push(x + 1, y)\n            stack.push(x - 1, y)\n")),(0,l.kt)("p",null,"Der obere ist ganz allgemein, der andere ist prim\xe4r f\xfcr Phyton. "),(0,l.kt)("p",null,"Ich habe mir noch ein noch ein Praxisbeispiel zum Floodfill-Algorythmus angeschaut.\nDurch dieses habe ich die Anwendung besser verstehen k\xf6nnen. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def flood_fill(x ,y, old, new):\n    # we need the x and y of the start position, the old value,\n    # and the new value\n    # the flood fill has 4 parts\n    # firstly, make sure the x and y are inbounds\n    if x < 0 or x >= len(field[0]) or y < 0 or y >= len(field):\n        return\n    # secondly, check if the current position equals the old value\n    if field[y][x] != old:\n        return\n    \n    # thirdly, set the current position to the new value\n    field[y][x] = new\n    # fourthly, attempt to fill the neighboring positions\n    flood_fill(x+1, y, old, new)\n    flood_fill(x-1, y, old, new)\n    flood_fill(x, y+1, old, new)\n    flood_fill(x, y-1, old, new)\n")),(0,l.kt)("p",null,"Dieses Beispiel l\xf6st das Problem des oberen Algorythmus welcher nicht erkennt kann ob man sich innerhalb des Feldes befindet. Weil sobald ein Feld ausserhalb der Liste ver\xe4ndert werden soll, bekommen wir die Fehlermeldung: ",(0,l.kt)("strong",{parentName:"p"},"IndexError: list index out of range")," "),(0,l.kt)("p",null,"Ich habe diesen Beispielscode modifiziert und in meinem NumTrip Game implementiert. "),(0,l.kt)("p",null,"Quellenangaben:",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("a",{parentName:"p",href:"https://de.wikipedia.org/wiki/Floodfill"},"Wikipediaeintrag Floodfill"),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("a",{parentName:"p",href:"https://python.plainenglish.io/a-python-example-of-the-flood-fill-algorithm-bced7f96f569"},"A Python Example of the Flood Fill Algorithm\n")),(0,l.kt)("h1",{id:"felder-auff\xfcllen"},"Felder Auff\xfcllen"),(0,l.kt)("p",null,"Dieser Teil des Spieles ist eigentlich Ziemlich simpel. wir m\xfcssen eine Funktion programmieren, welche bei leeren Feldern die Zahl aus dem Feld dar\xfcber nimmt. "),(0,l.kt)("p",null,"Sp\xe4ter m\xfcssen wir der Funktion noch die M\xf6glichkeit geben bei den Obersten Feldern eine zuf\xe4llige Zahl zu importieren. "),(0,l.kt)("p",null,"Da mir dieses Problem zu gross war, habe ich zuerst in einem Seperaten Dokument gearbeitet. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Vorgehensweise:"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Simple Liste erstellen "))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("ol",{parentName:"li",start:2},(0,l.kt)("li",{parentName:"ol"},"F\xfcr jeden einzelnen Wert in den Zeilen wiederholen "))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("ol",{parentName:"li",start:3},(0,l.kt)("li",{parentName:"ol"},"Falls oberste Zeile, zufallszahl einf\xfcgen "))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("ol",{parentName:"li",start:4},(0,l.kt)("li",{parentName:"ol"},"mithilfe des Indexes werte von Feldern \xfcberschreiben"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("ol",{parentName:"li",start:5},(0,l.kt)("li",{parentName:"ol"},"F\xfcr jede Zeile wiederholen ")))),(0,l.kt)("p",null,"Ich habe noch keine bessere Option daf\xfcr gefunden als das Programm f\xfcr jede Zele zu wiederholen, da ich keine gute m\xf6glichkeit hatte zu \xfcberpr\xfcfen ob es keine Leeren felder auf dem Spielfeld gibt. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"field = [[1,2, ' '], [' ',' ', ' '],[ ' ', ' ' , ' ']]  # 1.\nsave = []\n\nimport random\nrandom.seed(2)\nnumbers = [1, 2, 4, 8]\n\ndef fieldrearrange():\n    for i in range(5):     # 5. \n        for x in field:\n\n            print(field.index(x))\n            for y in x :                # 2. \n                \n                print(x.index(y))\n                if y == ' ' :\n\n                    if field.index(x) <= 0:                            # 3. \n                        field[0][x.index(y)] = random.choice(numbers)\n            \n                    if field.index(x) > 0:      # 4. \n                        save = field[field.index(x) - 1][x.index(y)]\n                        field[field.index(x) - 1][x.index(y)] = ' '\n                        field[field.index(x)][x.index(y)] = save\n                        save = []\n\nfieldrearrange()   \nprint(field)\n")))}u.isMDXComponent=!0}}]);